version: '3.8'

services:
  nginx:
    build: ./requirements/nginx
    ports:
      - "443:443"
      - "8080:8080"
      - "8090:8090"
    container_name: "nginx"
    restart: always
    networks:
      - ${NET}
    volumes:
      - web_data:/var/www/html  
      - admi_data:/var/www/adminer
    depends_on:
      - wordpress
    env_file:
      - .env

  wordpress:
    build: ./requirements/wordpress
    container_name: "wordpress"
    restart: always
    networks:
      - ${NET}
    volumes:
         - web_data:/var/www/html
    env_file:
      - .env
    depends_on:
      - mariadb

  mariadb:
    build: ./requirements/mariadb
    container_name: "mariadb"
    restart: always
    networks:
      - ${NET}
    volumes:
      - db_data:/var/lib/mysql
    env_file:
      - .env

  adminer:
    build: ./requirements/bonus/adminer
    container_name: "adminer"
    restart: always
    networks:
      - ${NET}
    volumes:
      - admi_data:/var/www/adminer
    depends_on:
      - mariadb

  pureftpd:
    build: ./requirements/bonus/pureftp
    container_name: "pure-ftpd"
    restart: always
    ports:
      - "21:21"
    networks:
      - ${NET}
    volumes:
      - web_data:/home/leo
    depends_on:
      - wordpress

  redis:
    build: ./requirements/bonus/redis
    container_name: "redis"
    restart: always
    networks:
      - ${NET}
  
  portafolio:
    build: ./requirements/bonus/portafolio
    container_name: "portafolio"
    restart: always
    ports:
      - "1313:1313"
        #networks:
        # - ${NET}

# Differences between user-defined bridges and the default bridge
# User-defined bridges provide automatic DNS resolution between containers.
# si no tendria q utilizar (--link flag) para crear vinculos entre los containers.
# - User-defined bridges provide better isolation.
# - All containers without a --network specified, are attached to the default bridge network
# - Remember, the default bridge network is not recommended for production.
networks:
    br-net:
      name: ${NET}
      driver: bridge
      ipam:
        config:
         - subnet: 172.16.0.0/28

volumes:
  web_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${HOME}/data/web_data
  
  db_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${HOME}/data/db_data
  
  admi_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${HOME}/data/admi_data
  
